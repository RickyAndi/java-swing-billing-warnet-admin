/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gui;

import com.mycompany.application.ApplicationState;
import com.mycompany.application.entities.Computer;
import com.mycompany.application.entities.Setting;
import com.mycompany.application.entities.Transaction;
import com.mycompany.application.entities.User;
import com.mycompany.application.enums.CurrencyAbbrevationEnum;
import com.mycompany.application.enums.ErrorMessageEnum;
import com.mycompany.application.enums.MessageEnum;
import com.mycompany.application.exceptions.OldPasswordDoesNotMatchException;
import com.mycompany.application.exceptions.RepeatPasswordDoesNotMatchException;
import com.mycompany.application.exceptions.UserDoesNotExistException;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.TimeUnit;

import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rickyandhi
 */
public class MainWindow extends javax.swing.JFrame {

    private ApplicationState applicationState;
    private CardLayout mainPanelCardLayout;
    private CardLayout dashboardContentPanelCardLayout;
    private CardLayout historyChangeTransactionStatusPanelCardLayout;
    /**
     * Creates new form MainWindow
     */
    public MainWindow(ApplicationState applicationState) {

        this.applicationState = applicationState;
        
        initComponents();
        
        this.mainPanelCardLayout = (CardLayout) mainPanel.getLayout();
        this.dashboardContentPanelCardLayout = (CardLayout) dashboardContentPanel
                .getLayout();
        this.historyChangeTransactionStatusPanelCardLayout = 
                (CardLayout) historyChangeTransactionStatusPanel.getLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        signInPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        passwordTextField = new javax.swing.JPasswordField();
        dashboardPanel = new javax.swing.JPanel();
        dashboardTabsPanel = new javax.swing.JPanel();
        toMonitorClientPageButton = new javax.swing.JButton();
        toHistoryPageButton = new javax.swing.JButton();
        toSettingPageButton = new javax.swing.JButton();
        toProfilePageButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        dashboardContentPanel = new javax.swing.JPanel();
        dashboardContentMonitorPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientComputersTable = new javax.swing.JTable();
        dashboardContentHistoryPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        historyWarnetNameLabel = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        historyWarnetAddressLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        historyTransactionTanggalLabel = new javax.swing.JLabel();
        historyTransactionNumberLabel = new javax.swing.JLabel();
        historyTransactionPcNameLabel = new javax.swing.JLabel();
        historyTransactionUsernameLabel = new javax.swing.JLabel();
        historyTransactionTariffLabel = new javax.swing.JLabel();
        historyChangeTransactionStatusPanel = new javax.swing.JPanel();
        historyNotPaidTransactionPanel = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        historyTransactionAmountPaidByClient = new javax.swing.JTextField();
        historyTransactionPayButton = new javax.swing.JButton();
        historyPaidTransactionPanelCard = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        historyTransactionPaidAmountByClientLabel = new javax.swing.JLabel();
        historyTransactionChangeLabel = new javax.swing.JLabel();
        historyTransactionStatusLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        dashboardContentSettingPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        settingWarnetNameTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        settingWarnetAddressTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        settingCostPerHourTextField = new javax.swing.JTextField();
        updateSettingButton = new javax.swing.JButton();
        dashboardContentProfilePanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        profileUsernameTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        profileUpdateProfileButton = new javax.swing.JButton();
        profilePasswordTextField = new javax.swing.JPasswordField();
        profileRepeatPasswordTextField = new javax.swing.JPasswordField();
        jLabel25 = new javax.swing.JLabel();
        profileOldPasswordTextField = new javax.swing.JPasswordField();
        dashboardContentLogoutPanel = new javax.swing.JPanel();
        dashboardLoadingPanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        mainPanel.setBackground(new java.awt.Color(177, 224, 239));
        mainPanel.setLayout(new java.awt.CardLayout());

        signInPanel.setBackground(new java.awt.Color(255, 255, 255));
        signInPanel.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBackground(new java.awt.Color(180, 234, 246));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/Login 1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel15)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        signInPanel.add(jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Sign In");

        usernameTextField.setBackground(new java.awt.Color(245, 245, 245));
        usernameTextField.setBorder(null);

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        loginButton.setBackground(new java.awt.Color(180, 234, 246));
        loginButton.setForeground(new java.awt.Color(67, 89, 96));
        loginButton.setText("Login");
        loginButton.setBorder(null);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordTextField.setBackground(new java.awt.Color(245, 245, 245));
        passwordTextField.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(159, 159, 159))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameTextField)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(passwordTextField))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        signInPanel.add(jPanel2);

        mainPanel.add(signInPanel, "signinPanelCard");

        dashboardPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dashboardPanelComponentShown(evt);
            }
        });

        dashboardTabsPanel.setBackground(new java.awt.Color(255, 255, 255));
        dashboardTabsPanel.setLayout(new java.awt.GridLayout(1, 5));

        toMonitorClientPageButton.setBackground(new java.awt.Color(180, 234, 246));
        toMonitorClientPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/booking.png"))); // NOI18N
        toMonitorClientPageButton.setText("Monitor");
        toMonitorClientPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toMonitorClientPageButtonActionPerformed(evt);
            }
        });
        dashboardTabsPanel.add(toMonitorClientPageButton);

        toHistoryPageButton.setBackground(new java.awt.Color(180, 234, 246));
        toHistoryPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/history.png"))); // NOI18N
        toHistoryPageButton.setText("History");
        toHistoryPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toHistoryPageButtonActionPerformed(evt);
            }
        });
        dashboardTabsPanel.add(toHistoryPageButton);

        toSettingPageButton.setBackground(new java.awt.Color(180, 234, 246));
        toSettingPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/settings.png"))); // NOI18N
        toSettingPageButton.setText("Setting");
        toSettingPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toSettingPageButtonActionPerformed(evt);
            }
        });
        dashboardTabsPanel.add(toSettingPageButton);

        toProfilePageButton.setBackground(new java.awt.Color(180, 234, 246));
        toProfilePageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/person.png"))); // NOI18N
        toProfilePageButton.setText("Profile");
        toProfilePageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toProfilePageButtonActionPerformed(evt);
            }
        });
        dashboardTabsPanel.add(toProfilePageButton);

        logoutButton.setBackground(new java.awt.Color(180, 234, 246));
        logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/logout.png"))); // NOI18N
        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        dashboardTabsPanel.add(logoutButton);

        dashboardContentPanel.setBackground(new java.awt.Color(180, 234, 246));
        dashboardContentPanel.setLayout(new java.awt.CardLayout());

        dashboardContentMonitorPanel.setBackground(new java.awt.Color(180, 234, 246));
        dashboardContentMonitorPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dashboardContentMonitorPanelComponentShown(evt);
            }
        });

        jLabel4.setText("Data Monitoring Client");

        clientComputersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PC", "Username", "Tanggal", "Jam Mulai", "Waktu", "Tarif", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(clientComputersTable);

        javax.swing.GroupLayout dashboardContentMonitorPanelLayout = new javax.swing.GroupLayout(dashboardContentMonitorPanel);
        dashboardContentMonitorPanel.setLayout(dashboardContentMonitorPanelLayout);
        dashboardContentMonitorPanelLayout.setHorizontalGroup(
            dashboardContentMonitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentMonitorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardContentMonitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardContentMonitorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE))
                .addContainerGap())
        );
        dashboardContentMonitorPanelLayout.setVerticalGroup(
            dashboardContentMonitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentMonitorPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
        );

        dashboardContentPanel.add(dashboardContentMonitorPanel, "monitorClientPanelCard");

        dashboardContentHistoryPanel.setBackground(new java.awt.Color(180, 234, 246));
        dashboardContentHistoryPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dashboardContentHistoryPanelComponentShown(evt);
            }
        });

        jLabel5.setText("Data History Client");

        jButton6.setText("Cari");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        historyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(historyTable);

        jLabel6.setText("Billing Client");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        historyWarnetNameLabel.setText("Nama warnet");

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setText("Tanggal");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel17.setText("No Bukti");

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel18.setText("PC");

        historyWarnetAddressLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyWarnetAddressLabel.setText("alamat warnet");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel19.setText("Username");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel20.setText("Tariff");

        historyTransactionTanggalLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionTanggalLabel.setText("-");

        historyTransactionNumberLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionNumberLabel.setText("-");

        historyTransactionPcNameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionPcNameLabel.setText("-");

        historyTransactionUsernameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionUsernameLabel.setText("-");

        historyTransactionTariffLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionTariffLabel.setText("-");

        historyChangeTransactionStatusPanel.setBackground(new java.awt.Color(255, 255, 255));
        historyChangeTransactionStatusPanel.setLayout(new java.awt.CardLayout());

        historyNotPaidTransactionPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel26.setText("Bayar");

        historyTransactionPayButton.setText("Bayar");

        javax.swing.GroupLayout historyNotPaidTransactionPanelLayout = new javax.swing.GroupLayout(historyNotPaidTransactionPanel);
        historyNotPaidTransactionPanel.setLayout(historyNotPaidTransactionPanelLayout);
        historyNotPaidTransactionPanelLayout.setHorizontalGroup(
            historyNotPaidTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyNotPaidTransactionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(historyNotPaidTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historyTransactionPayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(historyNotPaidTransactionPanelLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(historyTransactionAmountPaidByClient, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        historyNotPaidTransactionPanelLayout.setVerticalGroup(
            historyNotPaidTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyNotPaidTransactionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(historyNotPaidTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historyTransactionAmountPaidByClient, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(historyTransactionPayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        historyChangeTransactionStatusPanel.add(historyNotPaidTransactionPanel, "historyNotPaidTransactionPanelCard");

        historyPaidTransactionPanelCard.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel21.setText("Bayar");

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel22.setText("Kembali");

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel23.setText("Keterangan");

        jButton1.setText("Cetak");

        historyTransactionPaidAmountByClientLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionPaidAmountByClientLabel.setText("-");

        historyTransactionChangeLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionChangeLabel.setText("-");

        historyTransactionStatusLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        historyTransactionStatusLabel.setText("-");

        javax.swing.GroupLayout historyPaidTransactionPanelCardLayout = new javax.swing.GroupLayout(historyPaidTransactionPanelCard);
        historyPaidTransactionPanelCard.setLayout(historyPaidTransactionPanelCardLayout);
        historyPaidTransactionPanelCardLayout.setHorizontalGroup(
            historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPaidTransactionPanelCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(historyPaidTransactionPanelCardLayout.createSequentialGroup()
                        .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historyPaidTransactionPanelCardLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(historyTransactionPaidAmountByClientLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(historyTransactionChangeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(historyPaidTransactionPanelCardLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(historyTransactionStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        historyPaidTransactionPanelCardLayout.setVerticalGroup(
            historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPaidTransactionPanelCardLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(historyTransactionPaidAmountByClientLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historyTransactionChangeLabel)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(historyPaidTransactionPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(historyTransactionStatusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        historyChangeTransactionStatusPanel.add(historyPaidTransactionPanelCard, "historyPaidTransactionPanelCard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historyChangeTransactionStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel17))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel16)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(historyTransactionNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(historyTransactionTanggalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(historyWarnetNameLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(historyWarnetAddressLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(72, 72, 72)
                                .addComponent(historyTransactionPcNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(24, 24, 24)
                                .addComponent(historyTransactionUsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(historyTransactionTariffLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(historyWarnetNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyWarnetAddressLabel)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(historyTransactionTanggalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(historyTransactionNumberLabel))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(historyTransactionPcNameLabel))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historyTransactionUsernameLabel)
                    .addComponent(jLabel19))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(historyTransactionTariffLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyChangeTransactionStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dashboardContentHistoryPanelLayout = new javax.swing.GroupLayout(dashboardContentHistoryPanel);
        dashboardContentHistoryPanel.setLayout(dashboardContentHistoryPanelLayout);
        dashboardContentHistoryPanelLayout.setHorizontalGroup(
            dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardContentHistoryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 478, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardContentHistoryPanelLayout.createSequentialGroup()
                        .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(dashboardContentHistoryPanelLayout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        dashboardContentHistoryPanelLayout.setVerticalGroup(
            dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentHistoryPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardContentHistoryPanelLayout.createSequentialGroup()
                        .addGroup(dashboardContentHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jTextField3)
                            .addComponent(jTextField1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        dashboardContentPanel.add(dashboardContentHistoryPanel, "historyPanelCard");

        dashboardContentSettingPanel.setBackground(new java.awt.Color(180, 234, 246));
        dashboardContentSettingPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dashboardContentSettingPanelComponentShown(evt);
            }
        });

        jLabel7.setText("Dashboard Setting");

        jLabel8.setText("Nama Warnet");

        jLabel9.setText("Alamat");

        jLabel10.setText("Biaya Per Jam");

        settingCostPerHourTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingCostPerHourTextFieldActionPerformed(evt);
            }
        });

        updateSettingButton.setText("Simpan");
        updateSettingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSettingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashboardContentSettingPanelLayout = new javax.swing.GroupLayout(dashboardContentSettingPanel);
        dashboardContentSettingPanel.setLayout(dashboardContentSettingPanelLayout);
        dashboardContentSettingPanelLayout.setHorizontalGroup(
            dashboardContentSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardContentSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(settingWarnetNameTextField)
                    .addComponent(jLabel9)
                    .addComponent(settingWarnetAddressTextField)
                    .addComponent(jLabel10)
                    .addComponent(settingCostPerHourTextField)
                    .addComponent(updateSettingButton, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                .addContainerGap(512, Short.MAX_VALUE))
        );
        dashboardContentSettingPanelLayout.setVerticalGroup(
            dashboardContentSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentSettingPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingWarnetNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingWarnetAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingCostPerHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateSettingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        dashboardContentPanel.add(dashboardContentSettingPanel, "settingPanelCard");

        dashboardContentProfilePanel.setBackground(new java.awt.Color(180, 234, 246));
        dashboardContentProfilePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                dashboardContentProfilePanelComponentShown(evt);
            }
        });

        jLabel11.setText("Profile");

        jLabel12.setText("Username");

        jLabel13.setText("Password");

        jLabel14.setText("Ulangi Password");

        profileUpdateProfileButton.setText("Simpan");
        profileUpdateProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileUpdateProfileButtonActionPerformed(evt);
            }
        });

        profilePasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profilePasswordTextFieldActionPerformed(evt);
            }
        });

        jLabel25.setText("Password lama");

        profileOldPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileOldPasswordTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashboardContentProfilePanelLayout = new javax.swing.GroupLayout(dashboardContentProfilePanel);
        dashboardContentProfilePanel.setLayout(dashboardContentProfilePanelLayout);
        dashboardContentProfilePanelLayout.setHorizontalGroup(
            dashboardContentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardContentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardContentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)
                        .addComponent(profileUsernameTextField)
                        .addComponent(jLabel25)
                        .addComponent(jLabel14)
                        .addComponent(profileUpdateProfileButton, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                        .addComponent(profilePasswordTextField)
                        .addComponent(profileRepeatPasswordTextField)
                        .addComponent(profileOldPasswordTextField))
                    .addComponent(jLabel13))
                .addContainerGap(512, Short.MAX_VALUE))
        );
        dashboardContentProfilePanelLayout.setVerticalGroup(
            dashboardContentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardContentProfilePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel11)
                .addGap(26, 26, 26)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileOldPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilePasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileRepeatPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profileUpdateProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        dashboardContentPanel.add(dashboardContentProfilePanel, "profilePanelCard");

        dashboardContentLogoutPanel.setBackground(new java.awt.Color(180, 234, 246));

        javax.swing.GroupLayout dashboardContentLogoutPanelLayout = new javax.swing.GroupLayout(dashboardContentLogoutPanel);
        dashboardContentLogoutPanel.setLayout(dashboardContentLogoutPanelLayout);
        dashboardContentLogoutPanelLayout.setHorizontalGroup(
            dashboardContentLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );
        dashboardContentLogoutPanelLayout.setVerticalGroup(
            dashboardContentLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        dashboardContentPanel.add(dashboardContentLogoutPanel, "logoutPanelCard");

        dashboardLoadingPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/loading-gear.gif"))); // NOI18N

        javax.swing.GroupLayout dashboardLoadingPanelLayout = new javax.swing.GroupLayout(dashboardLoadingPanel);
        dashboardLoadingPanel.setLayout(dashboardLoadingPanelLayout);
        dashboardLoadingPanelLayout.setHorizontalGroup(
            dashboardLoadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLoadingPanelLayout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(jLabel24)
                .addContainerGap(349, Short.MAX_VALUE))
        );
        dashboardLoadingPanelLayout.setVerticalGroup(
            dashboardLoadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLoadingPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel24)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        dashboardContentPanel.add(dashboardLoadingPanel, "dashboardLoadingPanelCard");

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dashboardTabsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                .addGap(0, 62, Short.MAX_VALUE)
                .addComponent(dashboardContentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dashboardPanelLayout.createSequentialGroup()
                    .addComponent(dashboardTabsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 383, Short.MAX_VALUE)))
        );

        mainPanel.add(dashboardPanel, "dashboardPanelCard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String username = usernameTextField.getText();
        String password = passwordTextField.getText();
        
        try {
            
            this.applicationState.loginAction(username, password);
            
            this.mainPanelCardLayout
                    .show(mainPanel, "dashboardPanelCard");
            this.dashboardContentPanelCardLayout
                    .show(dashboardContentPanel, "dashboardLoadingPanelCard");
            
            MainWindow mainWindow = this;
            Timer showClientComputersPage = new Timer(2000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    mainWindow.dashboardContentPanelCardLayout
                        .show(dashboardContentPanel, "monitorClientPanelCard");
                }
            });
            showClientComputersPage.setRepeats(false);
            showClientComputersPage.start();
            
            
        } catch (UserDoesNotExistException exception) {
            JOptionPane.showMessageDialog(this, exception.getMessage());
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, ErrorMessageEnum.GENERAL_UNKNOWN_ERROR.message);
        }
        
    }//GEN-LAST:event_loginButtonActionPerformed

    private void profilePasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profilePasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profilePasswordTextFieldActionPerformed

    private void dashboardContentProfilePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dashboardContentProfilePanelComponentShown
        Optional<User> currentUser = this.applicationState.getCurrentUser();
        if (currentUser.isPresent()) {
            profileUsernameTextField.setText(currentUser.get().getUsername());
        }
    }//GEN-LAST:event_dashboardContentProfilePanelComponentShown

    private void toMonitorClientPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toMonitorClientPageButtonActionPerformed
        dashboardContentPanelCardLayout.show(dashboardContentPanel, "monitorClientPanelCard");
    }//GEN-LAST:event_toMonitorClientPageButtonActionPerformed

    private void toHistoryPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toHistoryPageButtonActionPerformed
        dashboardContentPanelCardLayout.show(dashboardContentPanel, "historyPanelCard");
    }//GEN-LAST:event_toHistoryPageButtonActionPerformed

    private void toSettingPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toSettingPageButtonActionPerformed
        dashboardContentPanelCardLayout.show(dashboardContentPanel, "settingPanelCard");
    }//GEN-LAST:event_toSettingPageButtonActionPerformed

    private void toProfilePageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toProfilePageButtonActionPerformed
        dashboardContentPanelCardLayout.show(dashboardContentPanel, "profilePanelCard");
    }//GEN-LAST:event_toProfilePageButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        dashboardContentPanelCardLayout.show(dashboardContentPanel, "logoutPanelCard");
    }//GEN-LAST:event_logoutButtonActionPerformed
    
    public void prepareClientComputersTableModelAndAddComputersData(List<Computer> computers) {
        DefaultTableModel clientComputersTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
        
        clientComputersTableModel.addColumn("PC");
        clientComputersTableModel.addColumn("Username");
        clientComputersTableModel.addColumn("Tanggal");
        clientComputersTableModel.addColumn("Jam Mulai");
        clientComputersTableModel.addColumn("Waktu");
        clientComputersTableModel.addColumn("Tarif");
        clientComputersTableModel.addColumn("Status");
        
        for (Computer computer : computers) {
            clientComputersTableModel.addRow(new String[] {
                computer.getName(), 
                getComputerCurrentUsername(computer), 
                getComputerLastStartDate(computer), 
                getComputerLastStartTime(computer), 
                getComputerActiveTime(computer), 
                getComputerCurrentTarif(computer),
                getComputerStatus(computer)
            });
        }
        
        clientComputersTable.setModel(clientComputersTableModel);
    }
    
    private void dashboardContentMonitorPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dashboardContentMonitorPanelComponentShown
        applicationState.getClientComputersAction();
        List<Computer> computers = applicationState.getClientComputers();
        prepareClientComputersTableModelAndAddComputersData(computers);
    }//GEN-LAST:event_dashboardContentMonitorPanelComponentShown

    private void dashboardPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dashboardPanelComponentShown
        this.applicationState.getInternetCafeSettingsAction();
    }//GEN-LAST:event_dashboardPanelComponentShown

    private void settingCostPerHourTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingCostPerHourTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingCostPerHourTextFieldActionPerformed

    private void dashboardContentSettingPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dashboardContentSettingPanelComponentShown
        settingWarnetNameTextField
                .setText(this.applicationState.getInternetCafeNameSetting()
                        .getStringValue()
                );
        settingWarnetAddressTextField
                .setText(this.applicationState.getInternetCafeAddressSetting()
                        .getStringValue()
                );
        settingCostPerHourTextField
                .setText(this.applicationState.getCostPerHourSetting()
                        .getDecimalValue().toString()
                );
    }//GEN-LAST:event_dashboardContentSettingPanelComponentShown
     
    private void prepareHistoryTableModelAndAddHistoryTransactionsData(List<Transaction> transactions) {
        DefaultTableModel historyTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
         
        historyTableModel.addColumn("No Bukti");
        historyTableModel.addColumn("PC");
        historyTableModel.addColumn("Username");
        historyTableModel.addColumn("Tanggal");
        historyTableModel.addColumn("Jam mulai");
        historyTableModel.addColumn("Waktu");
        historyTableModel.addColumn("Tarif");
        historyTableModel.addColumn("Keterangan");
        
        for (Transaction transaction : transactions) {
            historyTableModel.addRow(new String[] {
                getTransactionNumber(transaction), 
                transaction.getComputer().getName(), 
                transaction.getUsername(),
                getTransactionStartOnDate(transaction),
                getTransactionStartOnTime(transaction), 
                getTransactionDuration(transaction), 
                getTransactionTariff(transaction),
                getTransactionStatus(transaction)
            });
        }
        
        historyTable.setModel(historyTableModel);
    }
    
    private void dashboardContentHistoryPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_dashboardContentHistoryPanelComponentShown
        historyWarnetNameLabel
                .setText(applicationState.getInternetCafeNameSetting()
                        .getStringValue()
                );
        historyWarnetAddressLabel
                .setText(applicationState.getInternetCafeAddressSetting()
                        .getStringValue()
                );
  
        this.applicationState.getTransactionsAction();
        List<Transaction> transactions = applicationState.getTransactions();
        this.prepareHistoryTableModelAndAddHistoryTransactionsData(transactions);
    }//GEN-LAST:event_dashboardContentHistoryPanelComponentShown

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void historyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyTableMouseClicked
        Integer rowNumber = historyTable.rowAtPoint(evt.getPoint());
        Integer selectedTransactionId = Integer
                .parseInt(
                        historyTable.getValueAt(rowNumber, 0)
                            .toString()
                );
        List<Transaction> transactions = this.applicationState.getTransactions();
        Transaction selectedTransaction = transactions.stream()
                .filter(transaction -> selectedTransactionId.equals(transaction.getId()))
                .findAny()
                .orElse(null);
        
        applicationState.setSelectedTransaction(Optional.of(selectedTransaction));
        
        historyTransactionTanggalLabel
                .setText(getTransactionStartOnDate(selectedTransaction));
        historyTransactionNumberLabel
                .setText(getTransactionNumber(selectedTransaction));
        historyTransactionPcNameLabel
                .setText(selectedTransaction.getComputer().getName());
        historyTransactionUsernameLabel
                .setText(selectedTransaction.getUsername());
        historyTransactionTariffLabel
                .setText(getTransactionTariff(selectedTransaction));
        
        if (selectedTransaction.isNotPaid()) {
            this.historyChangeTransactionStatusPanelCardLayout
                    .show(historyChangeTransactionStatusPanel, "historyNotPaidTransactionPanelCard");
        } else {
            this.historyChangeTransactionStatusPanelCardLayout
                    .show(historyChangeTransactionStatusPanel, "historyPaidTransactionPanelCard");
            historyTransactionPaidAmountByClientLabel
                    .setText(getTransactionAmountPaidByClient(selectedTransaction));
            historyTransactionChangeLabel
                    .setText(getTransactionChangeAmount(selectedTransaction));
            historyTransactionStatusLabel
                    .setText(getTransactionStatus(selectedTransaction));
        }
    }//GEN-LAST:event_historyTableMouseClicked

    private void updateSettingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSettingButtonActionPerformed
        try {
            String warnetName = settingWarnetNameTextField.getText();
            String warnetAddress = settingWarnetAddressTextField.getText();
            String pricePerHour = settingCostPerHourTextField.getText();
            Double pricePerHourDouble = Double.parseDouble(pricePerHour);
            applicationState
                    .updateSettingsAction(warnetName, warnetAddress, pricePerHourDouble);
            
            JOptionPane.showMessageDialog(this, MessageEnum.UPDATE_SETTING_SUCCESS.message);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, ErrorMessageEnum.GENERAL_UNKNOWN_ERROR.message);
        }
    }//GEN-LAST:event_updateSettingButtonActionPerformed

    private void profileUpdateProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileUpdateProfileButtonActionPerformed
        String username = profileUsernameTextField.getText();
        String oldPassword = profileOldPasswordTextField.getText();
        String newPassword = profilePasswordTextField.getText();
        String repeatedNewPassword = profileRepeatPasswordTextField.getText();
        
        try {
            applicationState
                    .updateProfileAction(username, oldPassword, newPassword, repeatedNewPassword);
            JOptionPane.showMessageDialog(this, MessageEnum.UPDATE_PROFILE_SUCCESS.message);
        } catch (OldPasswordDoesNotMatchException e) {
            JOptionPane.showMessageDialog(this, ErrorMessageEnum.OLD_PASSWORD_DOES_NOT_MATCH.message);
        } catch (RepeatPasswordDoesNotMatchException e) {
            JOptionPane.showMessageDialog(this, ErrorMessageEnum.NEW_PASSWORD_DOES_NOT_MATCH.message);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, ErrorMessageEnum.GENERAL_UNKNOWN_ERROR.message);
        }
    }//GEN-LAST:event_profileUpdateProfileButtonActionPerformed

    private void profileOldPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileOldPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileOldPasswordTextFieldActionPerformed
    
    private String getTransactionAmountPaidByClient(Transaction transaction) {
        return CurrencyAbbrevationEnum.RUPIAH.currencyAbbr + 
                ". " + 
                new DecimalFormat("#0.00")
                    .format(transaction.getAmountPaidByClient());
    }
    
    private String getTransactionChangeAmount(Transaction transaction) {
        return CurrencyAbbrevationEnum.RUPIAH.currencyAbbr +
                ". " + 
                new DecimalFormat("#0.00")
                    .format(transaction.getAmountChange());
    }
    
    private String getTransactionStartOnDate(Transaction transaction) {
        return new SimpleDateFormat("dd-MM-yyyy")
                .format(transaction.getStartOn());
    }
    
    private String getTransactionStartOnTime(Transaction transaction) {
        return new SimpleDateFormat("HH:mm")
                .format(transaction.getStartOn());
    }
    
    private String getTransactionNumber(Transaction transaction) {
        return String.valueOf(transaction.getId());
    }
    
    private String getTransactionDuration(Transaction transaction) {
        Long startTimestamp = transaction.getStartOn().getTime();
        Long endTimestamp = transaction.getEndOn().getTime();
        Long differencesInMinutes = TimeUnit.MILLISECONDS.toMinutes(endTimestamp - startTimestamp);
        
        Long minutesRemainder = differencesInMinutes % 60;
        Long hours = (differencesInMinutes - minutesRemainder) / 60;
        
        return hours.toString() + " : " + minutesRemainder.toString();
    }
    
    public String getTransactionTariff(Transaction transaction) {
        return CurrencyAbbrevationEnum.RUPIAH.currencyAbbr + 
                ". " + 
                new DecimalFormat("#0.00")
                    .format(transaction.getAmountToBePaid());
    }
    
    public String getTransactionStatus(Transaction transaction) {
        if (transaction.isNotPaid()) {
            return "Belum lunas";
        }
        
        if (transaction.isPaid()) {
            return "Lunas";
        }
        
        return "Aktif";
    }
    
    private String getComputerCurrentUsername(Computer computer) {
        return computer.isActive() ? computer.getCurrentUsername() : "-";
    }
    
    private String getComputerLastStartDate(Computer computer) {
        return computer.isActive() ? new SimpleDateFormat("dd-MM-yyyy").format(computer.getLastStart()) : "-";
    }
    
    private String getComputerLastStartTime(Computer computer) {
        return computer.isActive() ? new SimpleDateFormat("HH:mm").format(computer.getLastStart()) : "-";
    }
    
    private String getComputerStatus(Computer computer) {
        return computer.isActive() ? "Aktif" : "Tidak Aktif";
    }
    
    private String getComputerActiveTime(Computer computer) {
        
        if (!computer.isActive()) {
            return "-";
        }
        
        Long differencesInMinutes = getComputerCurrentTimeAndLastStartTimeDifferencesInMinutes(computer);
        Long differencesInSeconds = getComputerCurrentTimeAndLastStartTimeDifferencesInSeconds(computer);
        
        Long minutesRemainder = differencesInMinutes % 60;
        Long hours = (differencesInMinutes - minutesRemainder) / 60;
        
        Long secondsRemainder = differencesInSeconds % 60;
        
        return hours.toString() + " : " + minutesRemainder.toString() + " : " + secondsRemainder.toString();
    }
    
    private String getComputerCurrentTarif(Computer computer) {
        if (!computer.isActive()) {
            return "-";
        }
        
        Setting costPerHourSetting = this.applicationState
                .getCostPerHourSetting();
        Setting costIncreasingPerMinuteSetting = this.applicationState
                .getCostIncreasingPerMinuteSetting();
        
        
        Long differences = getComputerCurrentTimeAndLastStartTimeDifferencesInMinutes(computer);
        Long differencesRemainder = differences % new Long(costIncreasingPerMinuteSetting
                .getIntegerValue());
        Long timesOfPerMinute = (differences - differencesRemainder) / new Long(costIncreasingPerMinuteSetting
                .getIntegerValue());
        
        Double costPerOneMinute = costPerHourSetting.getDecimalValue() / 60.0;
        Double costPerMinutesSetting = costPerOneMinute * costIncreasingPerMinuteSetting
                .getIntegerValue().doubleValue();
        Double totalTarif = timesOfPerMinute * costPerMinutesSetting;
        
        return CurrencyAbbrevationEnum.RUPIAH.currencyAbbr + 
                " " + 
                new DecimalFormat("#0.00")
                        .format(totalTarif);
    }
    
    private Long getComputerCurrentTimeAndLastStartTimeDifferencesInMinutes(Computer computer) {
        Long startTimestamp = computer.getLastStart().getTime();
        Long currentTimestamp = new Date().getTime();
        Long differences = TimeUnit.MILLISECONDS.toMinutes(currentTimestamp - startTimestamp);
        return differences;
    }
    
    private Long getComputerCurrentTimeAndLastStartTimeDifferencesInSeconds(Computer computer) {
        Long startTimestamp = computer.getLastStart().getTime();
        Long currentTimestamp = new Date().getTime();
        Long differences = TimeUnit.MILLISECONDS.toSeconds(currentTimestamp - startTimestamp);
        return differences;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable clientComputersTable;
    private javax.swing.JPanel dashboardContentHistoryPanel;
    private javax.swing.JPanel dashboardContentLogoutPanel;
    private javax.swing.JPanel dashboardContentMonitorPanel;
    private javax.swing.JPanel dashboardContentPanel;
    private javax.swing.JPanel dashboardContentProfilePanel;
    private javax.swing.JPanel dashboardContentSettingPanel;
    private javax.swing.JPanel dashboardLoadingPanel;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JPanel dashboardTabsPanel;
    private javax.swing.JPanel historyChangeTransactionStatusPanel;
    private javax.swing.JPanel historyNotPaidTransactionPanel;
    private javax.swing.JPanel historyPaidTransactionPanelCard;
    private javax.swing.JTable historyTable;
    private javax.swing.JTextField historyTransactionAmountPaidByClient;
    private javax.swing.JLabel historyTransactionChangeLabel;
    private javax.swing.JLabel historyTransactionNumberLabel;
    private javax.swing.JLabel historyTransactionPaidAmountByClientLabel;
    private javax.swing.JButton historyTransactionPayButton;
    private javax.swing.JLabel historyTransactionPcNameLabel;
    private javax.swing.JLabel historyTransactionStatusLabel;
    private javax.swing.JLabel historyTransactionTanggalLabel;
    private javax.swing.JLabel historyTransactionTariffLabel;
    private javax.swing.JLabel historyTransactionUsernameLabel;
    private javax.swing.JLabel historyWarnetAddressLabel;
    private javax.swing.JLabel historyWarnetNameLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JPasswordField profileOldPasswordTextField;
    private javax.swing.JPasswordField profilePasswordTextField;
    private javax.swing.JPasswordField profileRepeatPasswordTextField;
    private javax.swing.JButton profileUpdateProfileButton;
    private javax.swing.JTextField profileUsernameTextField;
    private javax.swing.JTextField settingCostPerHourTextField;
    private javax.swing.JTextField settingWarnetAddressTextField;
    private javax.swing.JTextField settingWarnetNameTextField;
    private javax.swing.JPanel signInPanel;
    private javax.swing.JButton toHistoryPageButton;
    private javax.swing.JButton toMonitorClientPageButton;
    private javax.swing.JButton toProfilePageButton;
    private javax.swing.JButton toSettingPageButton;
    private javax.swing.JButton updateSettingButton;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
